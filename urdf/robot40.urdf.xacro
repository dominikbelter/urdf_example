<?xml version="1.0"?>
<robot name="robot40" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="baseWidth" value="0.65" />
  <xacro:property name="baseLength" value="0.25" />
  <xacro:property name="baseHeight" value="0.15" />
  <xacro:property name="baseMass" value="20" />
  <xacro:property name="wheeldiam" value="0.07" />
  
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${baseWidth} ${baseLength} ${baseHeight}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${baseWidth} ${baseLength} ${baseHeight}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${baseMass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </link>
  
    <link name="body_link">
    <visual>
    <origin xyz="0.0 0.0 0.2" rpy="0 0 0" />
        <geometry>
        <mesh filename="package://urdf_example/meshes/robot40base.dae" />
        </geometry>
    </visual>
    <collision>
        <origin xyz="0.0 0.0 0.2" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://urdf_example/meshes/robot40base.dae" />   
        </geometry>
    </collision>
    <inertial>
        <mass value="10" />
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    </link>

  <joint name="base2body" type="fixed">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <child link="body_link"/>
    <parent link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  
    <link name="head">
      <visual>
	<origin xyz="-0.14 0 1.323" rpy="0 0 -1.5708" />
	<geometry>
          <mesh filename="package://urdf_example/meshes/headBase.dae" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="-0.14 0 1.323" rpy="0 0 -1.5708" />
	<geometry>
          <mesh filename="package://urdf_example/meshes/headBase.dae" />
	</geometry>
      </collision>
      <inertial>
        <mass value="2" />
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    </link>

    <joint name="toHead" type="fixed">
        <parent link="body_link"/>
        <child link="head"/>
        <origin xyz="0 0 0"/>
    </joint>
  
    <link name="utm30">
    <visual>
        <origin xyz="0 0 0" rpy="1.5708 0 0.0" />
        <geometry> 
        <mesh filename="package://urdf_example/meshes/headUTM.dae" />
        </geometry>
    </visual>
    <collision>
        <origin xyz="0 0 0" rpy="1.5708 0 0.0" />
        <geometry>
        <mesh filename="package://urdf_example/meshes/headUTM.dae" />
        </geometry>
    </collision>
    <inertial>
        <mass value="2" />
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    </link>

  <joint name="head_swivel" type="continuous">
    <parent link="head"/>
    <child link="utm30"/>
    <axis xyz="0 1 0"/>
    <origin xyz="-0.14 0.001 1.478" rpy="0 0 0"/>
    <limit effort="30" velocity="1.0"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint> 

  <transmission name="head_swivel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$head_swivel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="head_swivel">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
  
  <xacro:macro name="wheel" params="prefix suffix reflect">

    <link name="${prefix}_${suffix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="0.1"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="0.1"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="1" />
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
    </link>
    
    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_${suffix}_wheel"/>
      <origin xyz="${baseWidth*reflect/3} ${baseWidth*reflectLeg/3} -${wheeldiam/2+baseHeight/2.0}" rpy="0 0 0"/>
    </joint>

    <gazebo reference="${prefix}_${suffix}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>

    <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>

  <xacro:macro name="leg" params="prefix reflectLeg">

    <xacro:wheel prefix="${prefix}" suffix="front" reflect="1"/>
    <xacro:wheel prefix="${prefix}" suffix="back" reflect="-1"/>
  </xacro:macro>
  <xacro:leg prefix="right" reflectLeg="-1" />
  <xacro:leg prefix="left" reflectLeg="1" />
    
  
  <xacro:include filename="$(find ur_description)/urdf/ur3.urdf.xacro" />

  <xacro:ur3_robot prefix="left_arm_" joint_limited="true"/> 

  <joint name="left_arm_shoulder" type="fixed">
    <parent link="base_link" />
    <child link = "left_arm_base_link" />
    <origin xyz="-0.15 0.21 1.26" rpy="-2.3562 0.0 0.0" />
  </joint>
  
  <gazebo reference="utm30">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <gazebo reference="utm30">
        <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
            <scan>
            <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-1.570796</min_angle>
                <max_angle>1.570796</max_angle>
            </horizontal>
            </scan>
            <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
            </range>
            <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/rrbot/laser/scan</topicName>
            <frameName>box</frameName>
        </plugin>
        </sensor>
    </gazebo>
    
  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

</robot>
